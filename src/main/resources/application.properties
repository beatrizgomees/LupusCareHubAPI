jwt.public.key=classpath:app.pub
jwt.private.key=classpath:app.key

spring.application.name=api-authentication

spring.jpa.database=POSTGRESQL
spring.datasource.url=jdbc:postgresql://172.17.0.1:5432/apiauthentication
spring.datasource.username=postgres
spring.datasource.password=123


spring.jpa.show-sql=true
spring.jpa.generate-ddl=true

spring.flyway.user=postgres
spring.flyway.password=123
spring.flyway.url= jdbc:postgresql://172.17.0.1:5432/apiauthentication
spring.flyway.locations= classpath:db/migration
spring.flyway.enabled: true

# Configuração para o Springdoc OpenAPI
springdoc.api-docs.path=/docs            # Caminho para a documentação da API
springdoc.swagger-ui.path=/swagger-docs  # Caminho para o Swagger UI
springdoc.swagger-ui.tags-sorter=alpha   # Ordenação alfabética das tags no Swagger UI
springdoc.swagger-ui.operations-sorter=method  # Ordenação das operações no Swagger UI

# Regras de permissão para determinados endpoints
spring.security.filter.dispatcher-types.error=permitAll  # Permitir acesso a endpoints de erro
spring.security.filter.dispatcher-request-matcher.auth-whitelist=permitAll  # Permitir acesso a endpoints na lista branca de autenticação
spring.security.filter.dispatcher-request-matcher.auth-whitelist.urls[0]=/api/v1/auth/**  # URL na lista branca
spring.security.filter.dispatcher-request-matcher.auth-whitelist.urls[1]=/v3/api-docs/**
spring.security.filter.dispatcher-request-matcher.auth-whitelist.urls[2]=/v3/api-docs.yaml
spring.security.filter.dispatcher-request-matcher.auth-whitelist.urls[3]=/swagger-ui/**
spring.security.filter.dispatcher-request-matcher.auth-whitelist.urls[4]=/swagger-ui.html



server.port=8080




